{"version":3,"sources":["components/Navbar.js","contexts/RecipeContext.js","components/RecipeDetails.js","components/RecipeList.js","components/RecipeForm.js","components/Recipe.js","App.js","serviceWorker.js","index.js"],"names":["navStyle","Navbar","react_default","a","createElement","className","style","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","RecipeContext","createContext","RecipeContextProvider","props","_useState","useState","name","description","ingredients","img","uuid","_useState2","Object","slicedToArray","recipes","setRecipes","Provider","value","addRecipe","concat","toConsumableArray","removeRecipe","filter","recipe","children","divStyle","width","margin","RecipeDetails","_ref","useContext","src","alt","pathname","state","RecipeList","length","map","components_RecipeDetails","key","RecipeForm","recipeName","setRecipeName","_useState3","_useState4","setDescription","_useState5","_useState6","photoURL","setPhotoURL","_useState7","_useState8","setIngredients","handleSubmit","e","onSubmit","aria-describedby","placeholder","onChange","target","required","rows","onClick","Recipe","location","App","contexts_RecipeContext","components_Navbar","react_router","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fe01cdb.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst navStyle = {\n}\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light ml-3\" style={navStyle}>\n      <NavLink className=\"navbar-brand\" to=\"/\">Recipe App</NavLink>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item active\">\n        <NavLink className=\"nav-link\" to=\"/\">Home<span className=\"sr-only\">(current)</span></NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/\">All Recipes</NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink className=\"nav-link\" to=\"/newrecipe\">New Recipe</NavLink>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n  )\n}\n\nexport default Navbar\n","import React, { createContext, useState } from 'react'\nimport uuid from 'uuid/v4'\n\nexport const RecipeContext = createContext()\n\nconst RecipeContextProvider = (props) => {\n\nconst [ recipes, setRecipes ] = useState([\n   {name: 'Chocolate cake', description: 'Chocolate awesomeness', ingredients: '2 large eggs, 2 cups of sugar, chocolate, 2 cups of flour', img: 'https://images.pexels.com/photos/45202/brownie-dessert-cake-sweet-45202.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', id: uuid()},\n   {name: 'Apple Pie', description: 'Tasty pie', ingredients: 'Apple, Pie', img: 'https://images.pexels.com/photos/989704/pexels-photo-989704.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', id: uuid()},\n   {name: 'Pancakes', description: 'Sweet pancakes', ingredients: 'Pan, cake', img: 'https://images.pexels.com/photos/236804/pexels-photo-236804.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', id: uuid()},\n   {name: 'Oatmeal', description: 'Healthy breakfast to start your day', ingredients: 'oatmeal, water, handfull of blueberries', img: 'https://images.pexels.com/photos/216951/pexels-photo-216951.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940', id: uuid()}\n])\n\nconst addRecipe = (name, img, description, ingredients) => {\n  setRecipes([...recipes, {name, img, description, ingredients, id: uuid()}])\n}\n\nconst removeRecipe = (id) => {\n  setRecipes(recipes.filter(recipe => recipe.id !== id))\n}\n\n\n  return (\n    <RecipeContext.Provider value={{ recipes, addRecipe, removeRecipe }}>\n    { props.children }\n    </RecipeContext.Provider>\n  )\n}\n\nexport default RecipeContextProvider\n","import React, { useContext } from 'react'\nimport { RecipeContext } from '../contexts/RecipeContext'\nimport { Link } from 'react-router-dom'\n\n\nconst divStyle = {\n  width: '20rem',\n  margin: '20px',\n}\n\nconst RecipeDetails = ({ recipe }) => {\n  const { removeRecipe } = useContext(RecipeContext)\n\n\n  return (\n    <div className=\"col-md-4\" id={recipe.id}>\n      <div className=\"card\" style={divStyle}>\n      <img className=\"card-img-top\" src={recipe.img} alt=\"pic\"/>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{recipe.name}</h5>\n          <p className=\"card-text\">{recipe.description}</p>\n          <Link to={{pathname: '/recipes/' + recipe.id , state: { recipe }}} className=\"btn btn-primary\">Check Ingredients</Link>\n        </div>\n        </div>\n      </div>\n\n  )\n}\n\nexport default RecipeDetails\n","import React, { useContext } from 'react'\nimport RecipeDetails from './RecipeDetails'\nimport { RecipeContext } from '../contexts/RecipeContext'\n\n\n\n\n\nconst RecipeList = () => {\n\n  const { recipes } = useContext(RecipeContext)\n\n  return recipes.length ? (\n    <div className=\"container\">\n      <div className=\"card-deck\">\n        <div className=\"row\">\n          {recipes.map(recipe => {\n            return ( <RecipeDetails recipe={recipe} key={recipe.id} /> )\n          })}\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div>There are no recipes</div>\n  )\n}\n\nexport default RecipeList\n","import React, { useContext, useState } from 'react'\nimport { RecipeContext } from '../contexts/RecipeContext'\nimport { Link } from 'react-router-dom'\n\nconst divStyle = {\n  margin: 'auto',\n  width: '50%',\n\n}\n\nconst RecipeForm = () => {\n\n\n  const { addRecipe } = useContext(RecipeContext)\n  const [ recipeName, setRecipeName ] = useState('')\n  const [ description, setDescription ] = useState('')\n  const [ photoURL, setPhotoURL ] = useState('')\n  const [ ingredients, setIngredients ] = useState('')\n\n\n  const handleSubmit = (e) => {\n    // e.preventDefault()\n\n    addRecipe(recipeName, photoURL, description, ingredients)\n    setRecipeName('')\n    setPhotoURL('')\n    setDescription('')\n    setIngredients('')\n  }\n\n\n  return (\n    <div className=\"container const mt-5\" style={divStyle} onSubmit={handleSubmit}>\n      <form>\n        <div className=\"form-group\">\n          <label>Recipe name</label>\n          <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Pecan Pie\" value={recipeName} onChange={(e) => setRecipeName(e.target.value)} required/>\n        </div>\n\n        <div className=\"form-group\">\n          <label >Photo URL</label>\n          <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"https://www.imgur.com/example\" value={photoURL} onChange={(e) => setPhotoURL(e.target.value)} required/>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Sorry I am too lazy to host photos.</small>\n        </div>\n\n        <div className=\"form-group\">\n        <label>Description</label>\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={description} onChange={(e) => setDescription(e.target.value)} required=\"required\"></textarea>\n      </div>\n\n      <div className=\"form-group\">\n        <label>Ingredients</label>\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" value={ingredients} onChange={(e) => setIngredients(e.target.value)} required=\"required\"></textarea>\n      </div>\n\n        <Link to='/' onClick={handleSubmit} className=\"btn btn-primary\">Submit</Link>\n      </form>\n    </div>\n  )\n}\n\n\nexport default RecipeForm\n","import React, { useContext } from 'react'\nimport { RecipeContext } from '../contexts/RecipeContext'\nimport { Link } from 'react-router-dom'\n\n\nconst Recipe = (props) => {\n\n  const { removeRecipe } = useContext(RecipeContext)\n\n  return (\n\n    <div className=\"container mid\">\n    <div className=\"one\">\n      <dl className=\"row bor\">\n        <dt className=\"col-sm-3 borderBottom\">Name</dt>\n        <dd className=\"col-sm-9\">{props.location.state.recipe.name}</dd>\n\n        <br/>\n\n        <dt className=\"col-sm-3 borderBottom\">Description</dt>\n        <dd className=\"col-sm-9\">{props.location.state.recipe.description}</dd>\n\n        <dt className=\"col-sm-3 borderBottom\">Ingredients</dt>\n        <dd className=\"col-sm-9\">{props.location.state.recipe.ingredients}</dd>\n      </dl>\n      </div>\n\n\n\n      <div className=\"two\">\n      <img src={props.location.state.recipe.img} className=\"img-fluid\" alt={props.location.state.recipe.description}></img>\n      </div>\n\n      <Link to={{pathname: '/'}} onClick={() => removeRecipe(props.location.state.recipe.id)}> <button className=\"btn btn-danger big\">Delete</button> </Link>\n\n    </div>\n  )\n}\n\n\nexport default Recipe\n","import React from 'react';\nimport Navbar from './components/Navbar'\nimport RecipeList from './components/RecipeList'\nimport RecipeContextProvider from './contexts/RecipeContext'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport RecipeForm from './components/RecipeForm.js'\nimport Recipe from './components/Recipe'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <RecipeContextProvider>\n      <BrowserRouter>\n        <Navbar/>\n        <Route exact path='/' component={RecipeList} />\n        <Route path='/newrecipe' component={RecipeForm} />\n        <Route path='/recipes/:id' component={Recipe} />\n\n      </BrowserRouter>\n    </RecipeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}